.model small
.stack 256
.code
set_display macro
	mov ah, 0 	; display mode function
	mov al, 13h 	; video, 320x200 graphics, 256 colors, 1 page
	int 10h
endm

unset_display macro
	mov ah, 0	; display mode function
	mov al, 3h	; text mode
	int 10h
endm

wait_keypress macro
	xor ax, ax
	;mov ah, 0h
	;int 16h
	mov ax, 0100h
	int 21h
endm

draw_pixel macro
	; draw one pixel :3
	mov cx, x
	mov dx, y

	add cx, cenx
	add dx, ceny

	sub cx, centerx
	sub dx, centery

	; Check if in range
	cmp cx, maxx
	jg runforyourlife
	test cx, cx
	js runforyourlife
	
	cmp dx, maxy
	jg runforyourlife
	test dx, dx
	js runforyourlife

	mov ax, dx

	mov bx, maxx
	mul bx
	add ax, cx

	mov bx, ax

	mov ah, color
	mov es:[bx], ah

	runforyourlife:
endm

waits macro
	xor ax, ax
	mov cx, 0
	mov dx, 0f00h
	mov ah, 86h
	int 15h
endm

chkeyend macro
	xor ax, ax
	mov ah, 1
	int 16h
	jnz exit
endm

AQA = 9

isin_A macro
	mov ax, x

	;; mov r0, r0, lsl #(30-13)
	;; 17/2 -> 8, 9?
	shl ax, AQA
	;; teq r0, r0, lsl #1
	jnz noteq
		shl ax, 1
	noteq:
	;; rsbmi r0, r0, #1<<31
	;; using 16-bit numbers, so #1<<15
	jns notneg
		mov bx, 1
		shl bx, 15
		sub bx, ax
		mov ax, bx
	notneg:
	;; mov r0, r0, asr #(30-13)
	;; 17/2 -> 8, 9?
	sar ax, AQA
	;; mul r1, r0, r0
	mov cx, ax ; store original ax
	mul ax
	mov bx, ax ; move ax^2 to bx
	mov ax, cx ; get back original ax
	;; mov r1, r1, asr #11
	;; 6?? 5??
	sar bx, 5
	;; rsb r1, r1, #3<<15
	;; 15/2 -> 7
	mov cx, 7
	sub cx, bx
	mov bx, cx
	;; mul r0, r1, r0
	mul bx
	;; mov r0, r0, asr #17
	;; 17/2 -> 9
	sar ax, AQA
	mov y, ax
endm

inciter macro
	mov cx, iter
	add cx, 1
	mov iter, cx
endm

maxx = 320
maxy = 200
cenx = maxx / 2
ceny = maxy / 2
color db 15
maxesbx = maxx*maxy

iter dw -cenx
boundx dw 4
boundy dw 4
centerx dw 0
centery dw 0
x dw 0
y dw 0

start:
set_display

; Set es to point to 0a000h, start of video memory
mov bx, 0a000h
mov es, bx

dploop:
	; calc x for a screen x
	mov ax, centerx
	add ax, iter
	mov x, ax
	
	isin_A
	
	draw_pixel

	waits
	
	chkeyend

	inciter
jmp dploop

; wait for the keypress
wait_keypress

exit:
unset_display

; terminate
mov ax, 4c00h
int 21h

end start
